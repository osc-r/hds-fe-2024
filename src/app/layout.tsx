"use client";

import localFont from "next/font/local";
import "./globals.css";
import "@fontsource/roboto/300.css";
import "@fontsource/roboto/400.css";
import "@fontsource/roboto/500.css";
import "@fontsource/roboto/700.css";
import ReactQueryProvider from "../utils/ReactQueryProvider";
import { useRouter } from "next/navigation";
import { useUserStore } from "../stores/user.store";
import { getAuth, User } from "firebase/auth";
import firebaseService from "../services/firebase";
import { useEffect } from "react";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const router = useRouter();
  const { setUser } = useUserStore();

  useEffect(() => {
    const auth = getAuth(firebaseService.app);
    auth.onAuthStateChanged((user) => {
      console.log("[onAuthStateChanged]", user);
      if (user) {
        const _user = user as User & {
          accessToken: string;
        };
        setUser({ accessToken: _user.accessToken });
        router.push("/academic-calendar");
      } else {
        router.push("/");
      }
    });
    auth.onIdTokenChanged((user) => {
      console.log("[onIdTokenChanged]", user);
      const _user = user as User & {
        accessToken: string;
      };
      setUser({ accessToken: _user.accessToken });
    });
  }, []);

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <ReactQueryProvider>{children}</ReactQueryProvider>
      </body>
    </html>
  );
}
